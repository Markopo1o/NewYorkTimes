plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'kotlin-android'
    id("androidx.navigation.safeargs")
}
Properties localProps = new Properties()
if (project.rootProject.file('key.properties').canRead()) {
    localProps.load(new FileInputStream(project.rootProject.file('key.properties')))
} else {
    System.err.println("local.properties file is missing, please create it.")
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "hu.jm.newyorktimes"
        minSdk 28
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'TIMES_API_KEY', "\"" + localProps['times.apikey'] + "\""
        buildConfigField 'String', 'BASE_URL', "\"https://api.nytimes.com\""
        buildConfigField 'String', 'CHROME_PACKAGE', "\"com.android.chrome\""
        buildConfigField 'String', 'DEFPIC_URL', "\"https://developer.nytimes.com/logos/logo?v=1600101622804\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.mikhaellopez:circularimageview:4.3.0'

    implementation("io.coil-kt:coil:1.0.0-rc3")



    def moshi_version = '1.13.0'
    def retrofit_version = '2.9.0'
    def logging_version = "4.3.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    implementation "com.squareup.okhttp3:okhttp:$logging_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_version"

    def archVersion = '2.2.0'
    def lifecycle_version = '2.4.1'
    implementation "androidx.lifecycle:lifecycle-extensions:$archVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.activity:activity-ktx:1.4.0"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Room components
    def room_version = '2.4.2'
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // Kotlin components

    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
}